// Hàm tính toán giá trị quân cờ
const getPieceValue = (piece) => {
    const pieceValues = {
        p: 1, // Pawn
        n: 3, // Knight
        b: 3, // Bishop
        r: 5, // Rook
        q: 9, // Queen
        k: 0, // King
    };
    return pieceValues[piece.type] || 0;
};

// Hàm tính toán giá trị chiến lược của quân cờ theo vị trí
const getPieceSquareValue = (piece, row, col) => {
    const pieceSquareTable = {
        p: [
            [0, 0, 0, 0, 0, 0, 0, 0],
            [5, 10, 10, -20, -20, 10, 10, 5],
            [5, 10, 10, 0, 0, 10, 10, 5],
            [0, 0, 0, 20, 20, 0, 0, 0],
            [5, -5, -10, 30, 30, -10, -5, 5],
            [5, 5, 10, 50, 50, 10, 5, 5],
            [10, 10, 20, 80, 80, 20, 10, 10],
            [0, 0, 0, 0, 0, 0, 0, 0],
        ],
        n: [
            [-50, -40, -30, -30, -30, -30, -40, -50],
            [-40, -20, 0, 5, 5, 0, -20, -40],
            [-30, 5, 10, 15, 15, 10, 5, -30],
            [-30, 0, 15, 20, 20, 15, 0, -30],
            [-30, 5, 15, 20, 20, 15, 5, -30],
            [-30, 0, 10, 15, 15, 10, 0, -30],
            [-40, -20, 0, 5, 5, 0, -20, -40],
            [-50, -40, -30, -30, -30, -30, -40, -50],
        ],
        b: [
            [-20, -10, -10, -10, -10, -10, -10, -20],
            [-10, 0, 5, 10, 10, 5, 0, -10],
            [-10, 5, 10, 15, 15, 10, 5, -10],
            [-10, 10, 15, 20, 20, 15, 10, -10],
            [-10, 5, 10, 15, 15, 10, 5, -10],
            [-10, 0, 5, 10, 10, 5, 0, -10],
            [-20, -10, -10, -10, -10, -10, -10, -20],
            [-20, -10, -10, -10, -10, -10, -10, -20],
        ],
        r: [
            [0, 5, 10, 10, 10, 10, 5, 0],
            [5, 10, 20, 20, 20, 20, 10, 5],
            [10, 20, 30, 30, 30, 30, 20, 10],
            [10, 20, 30, 40, 40, 30, 20, 10],
            [10, 20, 30, 40, 40, 30, 20, 10],
            [10, 20, 30, 30, 30, 30, 20, 10],
            [5, 10, 20, 20, 20, 20, 10, 5],
            [0, 5, 10, 10, 10, 10, 5, 0],
        ],
        q: [
            [-20, -10, -10, -5, -5, -10, -10, -20],
            [-10, 0, 5, 0, 0, 5, 0, -10],
            [-10, 5, 10, 10, 10, 10, 5, -10],
            [-5, 0, 10, 20, 20, 10, 0, -5],
            [-5, 0, 10, 20, 20, 10, 0, -5],
            [-10, 5, 10, 10, 10, 10, 5, -10],
            [-10, 0, 5, 0, 0, 5, 0, -10],
            [-20, -10, -10, -5, -5, -10, -10, -20],
        ],
        k: [
            [50, 100, 100, 100, 100, 100, 100, 50],
            [50, 100, 100, 100, 100, 100, 100, 50],
            [50, 100, 100, 100, 100, 100, 100, 50],
            [50, 100, 100, 100, 100, 100, 100, 50],
            [50, 100, 100, 100, 100, 100, 100, 50],
            [50, 100, 100, 100, 100, 100, 100, 50],
            [50, 100, 100, 100, 100, 100, 100, 50],
            [50, 100, 100, 100, 100, 100, 100, 50],
        ],
    };
    return pieceSquareTable[piece.type][row][col] || 0;
};

// Hàm tính toán điểm của bàn cờ
export const evaluateBoard = (game) => {
    const board = game.getBoard();
    let score = 0;

    // Duyệt qua từng ô trên bàn cờ và tính điểm
    for (let row = 0; row < 8; row++) {
        for (let col = 0; col < 8; col++) {
            const piece = board[row][col];

            if (piece) {
                const pieceValue = getPieceValue(piece); // Tính giá trị quân cờ
                const squareValue = getPieceSquareValue(piece, row, col); // Tính giá trị theo vị trí

                // Thêm giá trị chiến lược vào điểm số
                score += piece.color === 'w' ? pieceValue + squareValue : -(pieceValue + squareValue);
            }
        }
    }

    return score;
};
